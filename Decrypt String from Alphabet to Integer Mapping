1309. Decrypt String from Alphabet to Integer Mapping

Given a string s formed by digits ('0' - '9') and '#' . We want to map s to English lowercase characters as follows:

Characters ('a' to 'i') are represented by ('1' to '9') respectively.
Characters ('j' to 'z') are represented by ('10#' to '26#') respectively. 
Return the string formed after mapping.

It's guaranteed that a unique mapping will always exist.

Example 1:
Input: s = "10#11#12"
Output: "jkab"
Explanation: "j" -> "10#" , "k" -> "11#" , "a" -> "1" , "b" -> "2".

Example 2:
Input: s = "1326#"
Output: "acz"

Example 3:
Input: s = "25#"
Output: "y"

Example 4:
Input: s = "12345678910#11#12#13#14#15#16#17#18#19#20#21#22#23#24#25#26#"
Output: "abcdefghijklmnopqrstuvwxyz"


var freqAlphabets = function(s) {
     return s.replace(/10#/g,"j")
             .replace(/11#/g,"k")
             .replace(/12#/g,"l")
             .replace(/13#/g,"m")
             .replace(/14#/g,"n")
             .replace(/15#/g,"o")
             .replace(/16#/g,"p")
             .replace(/17#/g,"q")
             .replace(/18#/g,"r")
             .replace(/19#/g,"s")
             .replace(/20#/g,"t")
             .replace(/21#/g,"u")
             .replace(/22#/g,"v")
             .replace(/23#/g,"w")
             .replace(/24#/g,"x")
             .replace(/25#/g,"y")
             .replace(/26#/g,"z")
             .replace(/1/g,"a")
             .replace(/2/g,"b")
             .replace(/3/g,"c")
             .replace(/4/g,"d")
             .replace(/5/g,"e")
             .replace(/6/g,"f")
             .replace(/7/g,"g")
             .replace(/8/g,"h")
             .replace(/9/g,"i");
};
